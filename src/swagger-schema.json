{
  "openapi": "3.1.0",
  "info": {
    "title": "Weather",
    "description": "Check the current weather in a place"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local Server"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "description": "Create a new user",
        "operationId": "createUser",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The user has been created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/authenticate": {
      "post": {
        "description": "Authenticate user generating a JWT token",
        "operationId": "authenticateUser",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
              "$ref": "#/components/schemas/UserAuth"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The user has been authenticated with JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticatedUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {

    },
    "/places": {

    },
    "/places/weather": {

    }
  },
  "components": {
    "schemas": {
      "jwtToken": {
        "type": "string",
        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI5Yzk3YTZlMy01YjNiLTRlOTAtOTYwYy1kZDA2ZjQ1MjUxOTAiLCJpYXQiOjE3MTI1NDk4OTQsImV4cCI6MTcxMjU1MzQ5NH0.4JKLQ-f7KfVJV0tKGjexAl50BY6PxtDm3Fq8fUV-4cE"
      },
      "name": {
        "type": "string",
        "example": "John Doe"
      },
      "email": {
        "type": "string",
        "example": "johndoe@email.com"
      },
      "password": {
        "type": "string",
        "example": "123456"
      },
      "passwordEncrypted": {
        "type": "string",
        "example": "$2b$10$px3F5d1s0c/MwObCo7CJLu68LAZ3VyvtTFppQWFi455j9QMC5C.e2"
      },
      "id": {
        "type": "string",
        "example": "a5d636de-f5ae-4e5a-9c05-52474a8c3d8e"
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "password": {
            "$ref": "#/components/schemas/password"
          }
        }
      },
      "UserCreatedResponse": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "password": {
            "$ref": "#/components/schemas/passwordEncrypted"
          }
        }
      },
      "UserAuth": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "password": {
            "$ref": "#/components/schemas/password"
          }
        }
      },
      "AuthenticatedUserResponse": {
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/jwtToken"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
